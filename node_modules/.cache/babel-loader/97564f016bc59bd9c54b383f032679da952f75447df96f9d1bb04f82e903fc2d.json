{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\WebstormProjects\\\\project_1\\\\src\\\\Pages\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport PostServer from \"../API/PostServer\";\nimport { usePosts } from \"../Nooks/usePosts\";\nimport { useFetching } from \"../Nooks/useFetching\";\nimport { getPageCount } from \"../components/Utils/pages\";\nimport MyButton from \"../components/UI/Button/MyButton\";\nimport MyModal from \"../components/UI/Modal/MyModal\";\nimport PostForm from \"../components/PostForm\";\nimport PostFilter from \"../components/PostFilter\";\nimport PostList from \"../components/PostList\";\nimport Pagination from \"../components/UI/Pagination/Pagination\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  const {\n    fetching,\n    isLoading: isPostsLoading,\n    error: postError\n  } = useFetching(async () => {\n    const responce = await PostServer.getAll(limit, page);\n    setPosts(responce.data);\n    const totalCount = responce.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useEffect(() => {\n    fetching();\n  }, [page]);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  const changePage = page => {\n    setPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: fetching,\n      children: \"GET POSTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: '30px'\n      },\n      onClick: () => {\n        setModal(true);\n      },\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 96\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"\\u041F\\u043E\\u0441\\u0442\\u044B \\u043F\\u0440\\u043E JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      changePage: changePage,\n      totalPages: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"ip1CZJUgYch7b4gTBpAXXWecNq8=\", false, function () {\n  return [usePosts, useFetching];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","PostServer","usePosts","useFetching","getPageCount","MyButton","MyModal","PostForm","PostFilter","PostList","Pagination","Loader","Posts","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","sortedAndSearchedPosts","fetching","isLoading","isPostsLoading","error","postError","responce","getAll","data","totalCount","headers","createPost","newPost","removePost","post","p","id","changePage","marginTop","margin","display","justifyContent"],"sources":["C:/Users/Administrator/WebstormProjects/project_1/src/Pages/Posts.jsx"],"sourcesContent":["\r\nimport React, {useEffect, useMemo, useRef, useState} from \"react\";\r\nimport PostServer from \"../API/PostServer\";\r\nimport {usePosts} from \"../Nooks/usePosts\";\r\nimport {useFetching} from \"../Nooks/useFetching\";\r\nimport {getPageCount} from \"../components/Utils/pages\";\r\nimport MyButton from \"../components/UI/Button/MyButton\";\r\nimport MyModal from \"../components/UI/Modal/MyModal\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostFilter from \"../components/PostFilter\";\r\nimport PostList from \"../components/PostList\";\r\nimport Pagination from \"../components/UI/Pagination/Pagination\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\n\r\nfunction Posts() {\r\n    const [posts, setPosts]=useState([])\r\n    const [filter, setFilter]=useState({sort:'',query:''})\r\n    const [modal, setModal]=useState(false)\r\n    const [totalPages,setTotalPages]=useState(0)\r\n    const [limit,setLimit]=useState(10)\r\n    const [page,setPage]=useState(1)\r\n    const sortedAndSearchedPosts=usePosts(posts, filter.sort, filter.query)\r\n\r\n\r\n\r\n    const {fetching,isLoading:isPostsLoading,error: postError}=useFetching( async()=> {\r\n        const responce = await PostServer.getAll(limit, page);\r\n        setPosts(responce.data);\r\n        const totalCount= responce.headers['x-total-count']\r\n        setTotalPages(getPageCount(totalCount, limit));\r\n    })\r\n\r\n    useEffect(()=>{\r\n        fetching()\r\n    },[page])\r\n\r\n\r\n    const createPost=(newPost)=>{\r\n        setPosts([...posts,newPost])\r\n        setModal(false)\r\n    }\r\n    const removePost=(post)=>{\r\n        setPosts(posts.filter(p =>p.id !== post.id))\r\n    }\r\n    const changePage=(page)=>{\r\n        setPage(page)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <MyButton onClick={fetching}>GET POSTS</MyButton>\r\n            <MyButton style={{marginTop:'30px'}} onClick={()=>{setModal(true)}}>\r\n                Создать пользователя\r\n            </MyButton>\r\n            <MyModal visible={modal} setVisible={setModal}>\r\n                <PostForm create={createPost}/>\r\n            </MyModal>\r\n            <hr style={{margin:'15px 0'}}/>\r\n            <PostFilter filter={filter} setFilter={setFilter}/>\r\n            {postError && <h1>Произошла ошибка ${postError}</h1>}\r\n            {\r\n                isPostsLoading\r\n                    ? <div style={{display:'flex', justifyContent:'center', marginTop:'50px'}}><Loader/></div>\r\n                    :<PostList remove={removePost} posts={sortedAndSearchedPosts} title='Посты про JS'/>\r\n            }\r\n            <Pagination page={page} changePage={changePage} totalPages={totalPages}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Posts;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}