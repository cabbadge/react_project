{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\WebstormProjects\\\\project_1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport Counter from \"./components/Counter\";\nimport './Style/App.css';\nimport PostItem from \"./components/PostItem\";\nimport PostList from \"./components/PostList\";\nimport MyButton from \"./components/UI/Button/MyButton\";\nimport MyInput from \"./components/UI/Input/MyInput\";\nimport PostForm from \"./components/PostForm\";\nimport MySelect from \"./components/UI/Select/MySelect\";\nimport { logDOM } from \"@testing-library/react\";\nimport PostFilter from \"./components/PostFilter\";\nimport MyModal from \"./components/UI/Modal/MyModal\";\nimport { usePosts } from \"./Nooks/usePosts\";\nimport axios from 'axios';\nimport PostServer from \"./API/PostServer\";\nimport Loader from \"./components/UI/Loader/Loader\";\nimport { useFetching } from \"./Nooks/useFetching\";\nimport { getPageCount } from \"./components/Utils/pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  let pagesArray = [];\n  for (let i = 0; i < totalPages; i++) {\n    console.log(i);\n  }\n  const {\n    fetching,\n    isLoading: isPostsLoading,\n    error: postError\n  } = useFetching(async () => {\n    const responce = await PostServer.getAll(limit, page);\n    setPosts(responce.data);\n    const totalCount = responce.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  useEffect(() => {\n    fetching();\n  }, []);\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n    setModal(false);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: fetching,\n      children: \"GET POSTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      style: {\n        marginTop: '30px'\n      },\n      onClick: () => {\n        setModal(true);\n      },\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this), isPostsLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 88\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: \"\\u041F\\u043E\\u0441\\u0442\\u044B \\u043F\\u0440\\u043E JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ip1CZJUgYch7b4gTBpAXXWecNq8=\", false, function () {\n  return [usePosts, useFetching];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Counter","PostItem","PostList","MyButton","MyInput","PostForm","MySelect","logDOM","PostFilter","MyModal","usePosts","axios","PostServer","Loader","useFetching","getPageCount","App","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","sortedAndSearchedPosts","pagesArray","i","console","log","fetching","isLoading","isPostsLoading","error","postError","responce","getAll","data","totalCount","headers","createPost","newPost","removePost","post","p","id","marginTop","margin","display","justifyContent"],"sources":["C:/Users/Administrator/WebstormProjects/project_1/src/App.js"],"sourcesContent":["\nimport React, {useEffect, useMemo, useRef, useState} from \"react\";\nimport Counter from \"./components/Counter\";\nimport './Style/App.css'\nimport PostItem from \"./components/PostItem\";\nimport PostList from \"./components/PostList\";\nimport MyButton from \"./components/UI/Button/MyButton\";\nimport MyInput from \"./components/UI/Input/MyInput\";\nimport PostForm from \"./components/PostForm\";\nimport MySelect from \"./components/UI/Select/MySelect\";\nimport {logDOM} from \"@testing-library/react\";\nimport PostFilter from \"./components/PostFilter\";\nimport MyModal from \"./components/UI/Modal/MyModal\";\nimport {usePosts} from \"./Nooks/usePosts\";\nimport axios from 'axios'\nimport PostServer from \"./API/PostServer\";\nimport Loader from \"./components/UI/Loader/Loader\";\nimport {useFetching} from \"./Nooks/useFetching\";\nimport {getPageCount} from \"./components/Utils/pages\";\nfunction App() {\n    const [posts, setPosts]=useState([])\n    const [filter, setFilter]=useState({sort:'',query:''})\n    const [modal, setModal]=useState(false)\n    const [totalPages,setTotalPages]=useState(0)\n    const [limit,setLimit]=useState(10)\n    const [page,setPage]=useState(1)\n    const sortedAndSearchedPosts=usePosts(posts, filter.sort, filter.query)\n\n    let pagesArray=[]\n    for(let i=0; i<totalPages;i++){\n        console.log(i)\n    }\n\n\n    const {fetching,isLoading:isPostsLoading,error: postError}=useFetching( async()=> {\n        const responce = await PostServer.getAll(limit, page);\n        setPosts(responce.data);\n        const totalCount= responce.headers['x-total-count']\n        setTotalPages(getPageCount(totalCount, limit));\n    })\n\n    useEffect(()=>{\n        fetching()\n\n    },[])\n\n\n    const createPost=(newPost)=>{\n        setPosts([...posts,newPost])\n        setModal(false)\n    }\n    const removePost=(post)=>{\n        setPosts(posts.filter(p =>p.id !== post.id))\n    }\n\n  return (\n    <div className=\"App\">\n        <MyButton onClick={fetching}>GET POSTS</MyButton>\n        <MyButton style={{marginTop:'30px'}} onClick={()=>{setModal(true)}}>\n            Создать пользователя\n        </MyButton>\n        <MyModal visible={modal} setVisible={setModal}>\n            <PostForm create={createPost}/>\n        </MyModal>\n        <hr style={{margin:'15px 0'}}/>\n        <PostFilter filter={filter} setFilter={setFilter}/>\n        {postError && <h1>Произошла ошибка ${postError}</h1>}\n        {\n            isPostsLoading\n            ? <div style={{display:'flex', justifyContent:'center', marginTop:'50px'}}><Loader/></div>\n            :<PostList remove={removePost} posts={sortedAndSearchedPosts} title='Посты про JS'/>\n        }\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}