{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const useFetching = callback => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetching = async () => {\n    try {\n      setIsLoading(true);\n      await callback;\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return fetching, isLoading, error;\n};\n_s(useFetching, \"4nGZWy+S+OTmoC8A1nCFdFSexFM=\");","map":{"version":3,"names":["useState","useFetching","callback","isLoading","setIsLoading","error","setError","fetching","e","message"],"sources":["C:/Users/Administrator/WebstormProjects/project_1/src/Nooks/useFetching.js"],"sourcesContent":["import {useState} from \"react\";\r\n\r\nexport const useFetching=(callback)=>{\r\n    const [isLoading,setIsLoading]=useState(false)\r\n    const [error, setError]=useState('')\r\n    const fetching =async ()=>{\r\n        try{\r\n            setIsLoading(true)\r\n            await callback\r\n        }\r\n        catch (e) {\r\n    setError(e.message)\r\n        }finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n    return(fetching, isLoading,error)\r\n}\r\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,OAAO,MAAMC,WAAW,GAAEC,QAAQ,IAAG;EAAA;EACjC,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAACJ,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMO,QAAQ,GAAE,YAAU;IACtB,IAAG;MACCH,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMF,QAAQ;IAClB,CAAC,CACD,OAAOM,CAAC,EAAE;MACdF,QAAQ,CAACE,CAAC,CAACC,OAAO,CAAC;IACf,CAAC,SAAQ;MACLL,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EACD,OAAOG,QAAQ,EAAEJ,SAAS,EAACE,KAAK;AACpC,CAAC;AAAA,GAfYJ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}